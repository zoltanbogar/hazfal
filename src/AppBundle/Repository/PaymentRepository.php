<?php

namespace AppBundle\Repository;

/**
 * PaymentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaymentRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllInMonth($paymentMonth)
    {
        $firstDayOfMonth = $paymentMonth."-01";
        $lastDayOfMonth = date("Y-m-t", strtotime($firstDayOfMonth));

        return $this->createQueryBuilder('p')
            ->andWhere('p.paymentDate >= :payment_month_start')
            ->andWhere('p.paymentDate <= :payment_month_end')
            ->setParameter('payment_month_start', $firstDayOfMonth)
            ->setParameter('payment_month_end', $lastDayOfMonth)
            ->orderBy('p.id', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findAllAfterMonth($startDate)
    {
        return $this->createQueryBuilder('p')
            ->andWhere('p.paymentDate >= :payment_after_date')
            ->setParameter('payment_after_date', $startDate)
            ->orderBy('p.id', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findAllBeforeMonth($endDate)
    {
        return $this->createQueryBuilder('p')
            ->andWhere('p.paymentDate <= :payment_before_date')
            ->setParameter('payment_before_date', $endDate)
            ->orderBy('p.id', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findAllInInterval($startDate, $endDate)
    {
        return $this->createQueryBuilder('p')
            ->andWhere('p.paymentDate >= :payment_after_date')
            ->andWhere('p.paymentDate <= :payment_before_date')
            ->setParameter('payment_after_date', $startDate)
            ->setParameter('payment_before_date', $endDate)
            ->orderBy('p.id', 'ASC')
            ->getQuery()
            ->getResult();
    }
}
